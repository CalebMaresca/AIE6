{"questions": {}, "relevant_contexts": {}, "corpus": {"4097adbe-6bb1-4a26-8496-06de713a0a98": "Intuitively, one would expect that systems this powerful would take millions of lines of complex code. Instead, it turns out a few hundred lines of Python is genuinely enough to train a basic version!\nWhat matters most is the training  data. You need a lot of data to make these things work, and the quantity and quality of the training data appears to be the most important factor in how good the resulting model is.\nIf you can gather the right data, and afford to pay for the GPUs to train it, you can build an LLM.", "f30d09e6-fff7-4ed0-b3a0-157bfaf7e59e": "A year ago, the only organization that had released a generally useful LLM was OpenAI. We\u2019ve now seen better-than-GPT-3 class models produced by Anthropic, Mistral, Google, Meta, EleutherAI, Stability AI, TII in Abu Dhabi (Falcon), Microsoft Research, xAI, Replit, Baidu and a bunch of other organizations.\nThe training cost (hardware and electricity) is still significant\u2014initially millions of dollars, but that seems to have dropped to the tens of thousands already. Microsoft\u2019s Phi-2 claims to have used \u201c14 days on 96 A100 GPUs\u201d, which works out at around $35,000 using current Lambda pricing.", "0610d737-788f-45da-a33d-f2fd4ebc07dd": "So training an LLM still isn\u2019t something a hobbyist can afford, but it\u2019s no longer the sole domain of the super-rich. I like to compare the difficulty of training an LLM to that of building a suspension bridge\u2014not trivial, but hundreds of countries around the world have figured out how to do it. (Correction: Wikipedia\u2019s Suspension bridges by country category lists 44 countries).\nYou can run LLMs on your own devices\nIn January of this year, I thought it would be years before I could run a useful LLM on my own computer. GPT-3 and 3.5 were pretty much the only games in town, and I thought that even if the model weights were available it would take a $10,000+ server to run them.", "27012394-5e83-4e64-8c3e-d57f608e906b": "Then in February, Meta released Llama. And a few weeks later in March, Georgi Gerganov released code that got it working on a MacBook.\nI wrote about how Large language models are having their Stable Diffusion moment, and with hindsight that was a very good call!\nThis unleashed a whirlwind of innovation, which was accelerated further in July when Meta released Llama 2\u2014an improved version which, crucially, included permission for commercial use.\nToday there are literally thousands of LLMs that can be run locally, on all manner of different devices.", "c2d752c0-0f48-426f-a130-837f4003f24d": "I run a bunch of them on my laptop. I run Mistral 7B (a surprisingly great model) on my iPhone. You can install several different apps to get your own, local, completely private LLM. My own LLM project provides a CLI tool for running an array of different models via plugins.\nYou can even run them entirely in your browser using WebAssembly and the latest Chrome!\nHobbyists can build their own fine-tuned models\nI said earlier that building an LLM was still out of reach of hobbyists. That may be true for training from scratch, but fine-tuning one of those models is another matter entirely.", "77e45c54-cd55-409c-8328-db57851651ea": "There\u2019s now a fascinating ecosystem of people training their own models on top of these foundations, publishing those models, building fine-tuning datasets and sharing those too.\nThe Hugging Face Open LLM Leaderboard is one place that tracks these. I can\u2019t even attempt to count them, and any count would be out-of-date within a few hours.\nThe best overall openly licensed LLM at any time is rarely a foundation model: instead, it\u2019s whichever fine-tuned community model has most recently discovered the best combination of fine-tuning data.\nThis is a huge advantage for open over closed models: the closed, hosted models don\u2019t have thousands of researchers and hobbyists around the world collaborating and competing to improve them.", "51e4cc4b-577f-47f8-92bc-450b966145aa": "We don\u2019t yet know how to build GPT-4\nFrustratingly, despite the enormous leaps ahead we\u2019ve had this year, we are yet to see an alternative model that\u2019s better than GPT-4.\nOpenAI released GPT-4 in March, though it later turned out we had a sneak peak of it in February when Microsoft used it as part of the new Bing.\nThis may well change in the next few weeks: Google\u2019s Gemini Ultra has big claims, but isn\u2019t yet available for us to try out.\nThe team behind Mistral are working to beat GPT-4 as well, and their track record is already extremely strong considering their first public model only came out in September, and they\u2019ve released two significant improvements since then.", "8cbcb3eb-7a81-425e-9806-eb18a5e97f46": "Still, I\u2019m surprised that no-one has beaten the now almost year old GPT-4 by now. OpenAI clearly have some substantial tricks that they haven\u2019t shared yet.\nVibes Based Development\nAs a computer scientist and software engineer, LLMs are infuriating.\nEven the openly licensed ones are still the world\u2019s most convoluted black boxes. We continue to have very little idea what they can do, how exactly they work and how best to control them.\nI\u2019m used to programming where the computer does exactly what I tell it to do. Prompting an LLM is decidedly not that!\nThe worst part is the challenge of evaluating them.\nThere are plenty of benchmarks, but no benchmark is going to tell you if an LLM actually \u201cfeels\u201d right when you try it for a given task.", "b6670c89-ff83-4838-8c0d-cff455819cce": "I find I have to work with an LLM for a few weeks in order to get a good intuition for it\u2019s strengths and weaknesses. This greatly limits how many I can evaluate myself!\nThe most frustrating thing for me is at the level of individual prompting.\nSometimes I\u2019ll tweak a prompt and capitalize some of the words in it, to emphasize that I really want it to OUTPUT VALID MARKDOWN or similar. Did capitalizing those words make a difference? I still don\u2019t have a good methodology for figuring that out.\nWe\u2019re left with what\u2019s effectively Vibes Based Development. It\u2019s vibes all the way down.\nI\u2019d love to see us move beyond vibes in 2024!\nLLMs are really smart, and also really, really dumb", "e259290c-fe2c-4738-9991-7a419f5536a4": "On the one hand, we keep on finding new things that LLMs can do that we didn\u2019t expect\u2014and that the people who trained the models didn\u2019t expect either. That\u2019s usually really fun!\nBut on the other hand, the things you sometimes have to do to get the models to behave are often incredibly dumb.\nDoes ChatGPT get lazy in December, because its hidden system prompt includes the current date and its training data shows that people provide less useful answers coming up to the holidays?\nThe honest answer is \u201cmaybe\u201d! No-one is entirely sure, but if you give it a different date its answers may skew slightly longer.", "a51e410a-6cb9-401d-b014-e559ee580b78": "Sometimes it omits sections of code and leaves you to fill them in, but if you tell it you can\u2019t type because you don\u2019t have any fingers it produces the full code for you instead.\nThere are so many more examples like this. Offer it cash tips for better answers. Tell it your career depends on it. Give it positive reinforcement. It\u2019s all so dumb, but it works!\nGullibility is the biggest unsolved problem\nI coined the term prompt injection in September last year.\n15 months later, I regret to say that we\u2019re still no closer to a robust, dependable solution to this problem.\nI\u2019ve written a ton about this already.\nBeyond that specific class of security vulnerabilities, I\u2019ve started seeing this as a wider problem of gullibility.", "08c4db4f-e568-44e7-9aaf-c09743a23b68": "Language Models are gullible. They \u201cbelieve\u201d what we tell them\u2014what\u2019s in their training data, then what\u2019s in the fine-tuning data, then what\u2019s in the prompt.\nIn order to be useful tools for us, we need them to believe what we feed them!\nBut it turns out a lot of the things we want to build need them not to be gullible.\nEveryone wants an AI personal assistant. If you hired a real-world personal assistant who believed everything that anyone told them, you would quickly find that their ability to positively impact your life was severely limited."}}